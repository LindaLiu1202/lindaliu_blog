{
  
    
        "post0": {
            "title": "Focus and Habits",
            "content": "“Psychology and the Good Life” . It’s nothing if you only know the good psychology and the good life without taking actions. | Exercise and sleep are important to maintain a good psychology and good life, and it is important to put them in actions. I personally lack exercise and sleep because of procrastination. | . | . Gratitude List . my family my mom | . | my friends emily | ally | enze | max | . | my teachers | . i am grateful for my family, my friends, and my teachers. Especially, I want to thank my mom for supporting me in studying and helping me when I encountered problems. I also want to thank my friend Ally for supporting me when I got into the drama/conflict last time, and I learned a lot from her. . #### Goals . In order to get enough sleep and exercise to maintain a healthy and good life Goal 1 - go to sleep at 12am everyday | Goal 2 - learn a new dance every weekend . | I would be a more happy person after acheving and maintaining these goals because my mom usually would be mad at me if I stayed up really late, and also staying up late is making me sleepy during classes and is bad for my health. | . | .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/markdown/2022/09/11/focus_habits.html",
            "relUrl": "/markdown/2022/09/11/focus_habits.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "My Story with Dancing",
            "content": "Hi!! Welcome! :) This is my story with dancing… My dance journey began when I was in a kindergarten in China. The first dance I learned was Latin dance and I took dance classes for many years and participated in several competitions and performances. . . After I became an elementary school student, I joined the school dance team in second grade. I remember auditioning for the dance team and the choir, and in the end, between the choir and the dance team, I chose to be on the dance team. In the school dance team, we trained and practiced dances every day before school and after school. We danced various types of dances, such as tap dance, Xinjiang dance, traditional Chinese dance and contemporary dance. It was a very fun and memorable experience. All of my teammates were very nice and I made a lot of friends and grew a lot as a dancer. I actually went to Australia and Hawaii with my team during the summer and we performed Xinjiang and contemporary dances. It was my first time going abroad (without my parents) and we went to visit many famous buildings and sites in Australia and Hawaii. . . . . In fourth and fifth grade, I took a super intense Chinese dance class outside of school to prepare for admission to a good middle school. I cried in almost every class when we were doing the super intense stretching for the first few weeks. We needed to learn all these dance techniques and flips, and I was really scared to do them, but I at least kept trying and really grew a lot and became very flexible. . . . However, unexpectedly, in 2018, when I became a sixth grader, I came to the U.S. to study and I didn’t tell my friends at school about it. The first year of studying abroad was indeed very tough. I lived with my brother and my friend in a host family and we needed to wake up very early because the school was quite far from my host family’s house and it was a small, private Christian school. Anyway, because of all of these factors, I stopped dancing, singing and playing the piano after I came to America. A year later, I transferred to another larger private Christian school and my family bought a house near the school. I tried jazz classes at a local dance studio, but to be honest, I didn’t like it and it wasn’t what I was looking for. I joined the school’s dance team for a year. I was still looking for the type of dancing I wanted to do. In the same year, I got into Kpop. I wanted to do Kpop dance, but it was really hard to find places that taught Kpop dance in San Diego. In 10th grade, I transferred to Del Norte. The summer before I transferred, my mom and I found a teacher who started a Kpop dance class, so I started going to that class and I loved it. The funny thing is that in my first Kpop dance class, we learned How You Like That by BLACKPINK and I ended up going home and not feeling my legs until the next day and I couldn’t move my legs because I hadn’t really danced in a long time. I am still taking the class until now, but I still want to try other dances such as HipHop dance or contemporary dance. I went to a HipHop dance camp this summer and it was intense but also fun at the same time because I found it challenging. . . . In fact, I’ve always wanted to make videos, whether it’s dance videos, singing videos or vlogs, but I haven’t really made the decision to start making them because I always feel like I’m not ready. This summer, I started making dance cover videos and posting them on YouTube and Bilibili! link to my YouTube channel . . . I’ve had the idea since 10th grade to create a Kpop dance club because I want to find a group of people who also like Kpop dance and that we can make dance cover videos together, and I have made up my mind to actually create this club this year. However, due to some reasons and conflicts, a Kpop dance club was created before me, so I couldn’t create the Kpop dance club I always wanted to create. But I still want to try, so now I am applying to create an Asian pop culture club where we can make singing and dancing videos of Kpop, Cpop, Jpop, etc, which I think it’s better than just a Kpop dance club because now I can do other types of dance from different Asian countries and not only dance but also sing, so now there are more options! My story with dance is still continuing and I’m looking forward to trying more types of dance in the future! . . Newest Dance Cover Video on my YouTube Channel: .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/markdown/2022/09/06/mystory_dancing.html",
            "relUrl": "/markdown/2022/09/06/mystory_dancing.html",
            "date": " • Sep 6, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Code.org Key Learnings",
            "content": "Use of extends (from lesson 6) . inheritance - an object-oriented programming principle where a subclass inherits the attributes and behaviors of a superclass | subclass - a class that extends a superclass and inherits its attributes and behaviors | superclass - a class that can be extended to create subclasses | . Club Example . public class ClubOfficer extends ClubMember { //extends tells java that ClubOfficer class should inherit the attributes and behaviors of ClubMember class public ClubOfficer() { //subclass constructor super(); //to call the superclass constructor in subclass } } . | public class ClubOfficer extends ClubMember { //extends tells java that ClubOfficer class should inherit the attributes and behaviors of ClubMember class | public ClubOfficer() { //subclass constructor | super(); //to call the superclass constructor in subclass | } | } Unresolved dependencies: - class ClubMember . PainterPlus Example . public class PainterPlus extends Painter { public PainterPlus() { super(); } } . Creating PainterPlus . Instantiate a PainterPlus object called myPainterPlus | sytax: ClassName objectName = new ClassName(); | . public class MyNeighborhood { public static void main(String[] args) { // Lesson 6 Level 3 // TO DO #1: Instantiate a PainterPlus object. PainterPlus myPainterPlus = new PainterPlus(); } } . Creating Objects . An object is instantiated using the following syntax: . ClassName objectName = new ClassName(); . Example: . public class MyNeighborhood { public static void main(String[] args) { // TO DO #1: Instantiate a Painter object called myPainter. Painter myPainter = new Painter(); myPainter.move(); } } . Using Objects . We can use methods to nevigate the object. . For example, for the myPainter object, we can use the move() and turnLeft() methods to navigate the myPainter object to the traffic cone. . A method is called using the following syntax: . variableName.methodName(); OR variableName.methodName(argument); . Example: . myPainterPlus.turnRight(); . A method signature for a void method uses the following syntax: . public void methodName() { // code to execute when the method is called } . Example: . public void turnRight() { turnLeft(); turnLeft(); turnLeft(); } . Lesson 8 . Purpose of the // and / / is to add comments to explain the function of the code . The Backpack allows you to save classes that you create so you can import them into other projects. | . Lesson 9 . control structure - a conditional or iteration statement which affects the flow of a program | iteration statement (loop) - a control structure that repeatedly executes a block of code | while loop - a control structure which executes a block of code repeatedly as long as a condition is true | . A while loop uses the following syntax: . while (condition) { // code to execute while the condition is true } . Example: (in PainterPlus.java) . public void takeAllPaint() { while (isOnBucket()){ takePaint(); } } public void paintLine() { while (hasPaint()) { paint(&quot;white&quot;); move(); } } . Lesson 10 . NOT ( ! ) operator - a logical operator that returns true when the operand is false and returns false when the operand is true | if-else statement (two-way selection statement) - specifies a block of code to execute when the condition is true and a block of code to execute when the condition is false | logical operator - an operator that returns a Boolean value | . An if-else statement uses the following syntax: . if (condition) { // code to execute if the condition is true } else { // code to execute if the condition is false } . Problem: can&#39;t run the code if there is { after else . public void moveOrTakePaint(){ while (canMove()) { if (!isOnBucket()) { move(); } else { takeAllPaint(); } } . code is working if there is no { after else . public void moveOrTakePaint(){ while (canMove()) { if (!isOnBucket()) { move(); } else takeAllPaint(); } } . Update: . public void moveSouth() { while (canMove(&quot;south&quot;)) { if (!isFacingSouth()){ turnRight(); } else { move(); } } } . Lesson 11 . concatenation - joining two strings together | . Printing to the console uses the following syntax: . System.out.print(); . OR . System.out.println(); . System.out.print() - leaves the cursor at the end of the line that it printed | System.out.println() - to print a line of text and then move the cursor to the next line | . Problem: Inside the printStatus() method, write the code to print information about the state of a PainterPlus object . My code: . public void printStatus() { System.out.println(); } . how to print the state of the object?? . public void printStatus() { System.out.println(&quot;Paint: &quot; + getMyPaint()); System.out.println(&quot;X Location: &quot; + getX()); System.out.println(&quot;Y Location: &quot; + getY()); System.out.println(&quot;Direction: &quot; + getDirection()); } . Lesson 12 . Method Decomposition - the process of breaking a problem down into smaller parts to write methods for each part | edge case - a bug that occurs at the highest or lowest end of a range of possible values or in extreme situations | . Lesson 13 . inheritance hierarchy - where a class serves as a superclass for more than one subclass | . Problem: how to paint pattern if there is no paint to pick up? . The main method . The main method in Java is arguably the most important method – it is the entry-point into any Java program. The syntax is the same for any Java program. The JVM (Java Virtual Machine) executes Java byte code, and the main method must have specific syntax for the JVM to identify it and execute its contents. . public static void main(String[] args) . public: The method needs to be public for the JVM to identify it. . static: static in this context means that there will be only one type of this method and that it will be shared. When we call the main method, it does not require a new instantiated object – it can be called without the creation of a new object. . void: There is nothing returned from the main method. . main: The general signature of the main method that is identified by the JVM to execute any program from start to finish. . String[] args: The main method&#39;s argument (or input parameter) is an array of type String. This allows the method to accept command line arguments, which are stored as Strings in this variable. The name args can be changed. . Examples . This method will be identified by the JVM and will execute accordingly assuming there are no other errors. . public static void main(String [] args) { System.out.println(&quot;Main Method&quot;); } . Syntax . public static void main(String[] args) .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/2022/09/05/key_learnings.html",
            "relUrl": "/2022/09/05/key_learnings.html",
            "date": " • Sep 5, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Primitives",
            "content": "Define in a Class the following data types . Demonstrate use of Primitives: int, double, boolean, string | Demonstrate use of Wrapper Class object: String | . Describe in comments how each data type choice is appropriate to application . public class DefinePrimitives { public static void main(String[] args) { int anInt = 55; //can be used to calculate people&#39;s age or grades double aDouble = 12.2; //can be used in a grade calculator boolean aBoolean = false; //can be used in a survay // not primitives but essential String aString = &quot;Hello, I am Linda Liu!&quot;; // can be used to display text String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . anInt: 55 aDouble: 12.2 aBoolean: false aString: Hello, I am Linda Liu! aStringFormal: Greetings, World! . Perform arithmetic expressions and assignment in a program code . simple operations | use compound assignment operator to perform an operation on both operands and store the result into the variable on the left | . Perform compound assignment operator (ie +=), add comments to describe the result of operator . int a = 10; int b = 5; int c = 100; int d = 0; d = ( a + b ) * c; System.out.println(&quot;d = &quot; + d); d /= c; //use compound assignment operator (/=) System.out.println(&quot;d = &quot; + d); d += (a * b); //use compound assignment operator (+=) System.out.println(&quot;d = &quot; + d); . d = 1500 d = 15 d = 65 . Determine what is result is in a variable as a result of an data type and expression (ie integer vs double) . the result of the variable d as a result of the operations (of intergers) is also an interger | . Perform an arithmetic expressions that uses casting, add comments that show how it produces desired result. . we use casting in java to change the data type of a variable frome one type to another | if one of the value in an expression is a double, java will assume that you want a double result or we can use the casting operator double | . | we can also use the casting operators to round | . System.out.println(10/5); System.out.println(10.0/5); System.out.println((double) 10/5); //use casting operator double in () . 2 2.0 2.0 . double number = 10/3; System.out.println((double)10/3); System.out.println((int)10/3); //int will drop everything after decimal, not rounding it int roundedNumber = (int) (number + 1.1); //add 1.1 to the number, cast that as an int, store result in roundedNumber System.out.println(roundedNumber); . 3.3333333333333335 3 4 .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/jupyter/2022/08/29/primitives.html",
            "relUrl": "/jupyter/2022/08/29/primitives.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Installation Check",
            "content": "Python Installed . python --version . Python 3.9.12 . python2 --version . Python 2.7.18 . python3 --version . Python 3.9.12 . Anaconda Installed . anaconda --version . anaconda Command line client (version 1.9.0) . conda info . active environment : base active env location : /Users/lin/opt/anaconda3 shell level : 1 user config file : /Users/lin/.condarc populated config files : conda version : 4.13.0 conda-build version : 3.21.8 python version : 3.9.12.final.0 virtual packages : __osx=10.16=0 __unix=0=0 __archspec=1=x86_64 base environment : /Users/lin/opt/anaconda3 (writable) conda av data dir : /Users/lin/opt/anaconda3/etc/conda conda av metadata url : None channel URLs : https://repo.anaconda.com/pkgs/main/osx-64 https://repo.anaconda.com/pkgs/main/noarch https://repo.anaconda.com/pkgs/r/osx-64 https://repo.anaconda.com/pkgs/r/noarch package cache : /Users/lin/opt/anaconda3/pkgs /Users/lin/.conda/pkgs envs directories : /Users/lin/opt/anaconda3/envs /Users/lin/.conda/envs platform : osx-64 user-agent : conda/4.13.0 requests/2.27.1 CPython/3.9.12 Darwin/21.5.0 OSX/10.16 UID:GID : 501:20 netrc file : None offline mode : False . Homebrew Installed . brew --version . Homebrew 3.5.10 Homebrew/homebrew-core (git revision fa385accb12; last commit 2022-08-24) . Jupyter Installed and Check Kernels . conda --version jupyter kernelspec list # list installed kernels . conda 4.13.0 Available kernels: bash /Users/lin/Library/Jupyter/kernels/bash java /Users/lin/Library/Jupyter/kernels/java javascript /Users/lin/Library/Jupyter/kernels/javascript python3 /Users/lin/opt/anaconda3/share/jupyter/kernels/python3 . Bash Kernel Installed . bash --version jupyter kernelspec list # list kernels . GNU bash, version 3.2.57(1)-release (x86_64-apple-darwin21) Copyright (C) 2007 Free Software Foundation, Inc. . npm -version # node package manager comes with nodejs jupyter kernelspec list # list kernels . 6.4.1 Available kernels: bash /Users/lin/Library/Jupyter/kernels/bash java /Users/lin/Library/Jupyter/kernels/java javascript /Users/lin/Library/Jupyter/kernels/javascript python3 /Users/lin/opt/anaconda3/share/jupyter/kernels/python3 . Java Kernel Installed . jupyter kernelspec list # list kernels . Available kernels: bash /Users/lin/Library/Jupyter/kernels/bash java /Users/lin/Library/Jupyter/kernels/java javascript /Users/lin/Library/Jupyter/kernels/javascript python3 /Users/lin/opt/anaconda3/share/jupyter/kernels/python3 . Java Installed . java --version . openjdk 17.0.4 2022-07-19 OpenJDK Runtime Environment Temurin-17.0.4+8 (build 17.0.4+8) OpenJDK 64-Bit Server VM Temurin-17.0.4+8 (build 17.0.4+8, mixed mode) .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/jupyter/2022/08/28/installation_check.html",
            "relUrl": "/jupyter/2022/08/28/installation_check.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Python Usage 'Hello World'",
            "content": "msg = &quot;Hello World&quot; print(msg) . Hello World .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/jupyter/2022/08/25/python.html",
            "relUrl": "/jupyter/2022/08/25/python.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Java Usage 'Hello World'",
            "content": "// Define Static Method within a Class public class HelloStatic { // Java standard runtime entry point public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } // A method call allows us to execute code that is wrapped in Class HelloStatic.main(null); // Class prefix allows reference of Static Method . Hello World! .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/jupyter/2022/08/25/java.html",
            "relUrl": "/jupyter/2022/08/25/java.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "Markdown Page",
            "content": "Markdown . This is an example of a markdown page! . Tomorrow X Together . What are the memebers from Tomorrow X Together: . Yeonjun | Soobin | Beomgyu | Taehyun | Huening Kai | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/markdown/2022/08/23/markdown.html",
            "relUrl": "/markdown/2022/08/23/markdown.html",
            "date": " • Aug 23, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post9": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://lindaliu1202.github.io/lindaliu_blog/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "My name is Linda Liu. I am a Junior at Del Norte High School. :) . .",
          "url": "https://lindaliu1202.github.io/lindaliu_blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "College Board",
          "content": "This page will be used to capture information about college board units. I will be putting everything about college board and AP exam on this page. PBL will most likely be markdown pages or Jupyter notebooks. . link to vocab page .",
          "url": "https://lindaliu1202.github.io/lindaliu_blog/college_board/",
          "relUrl": "/college_board/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
      ,"page8": {
          "title": "Vocab",
          "content": "(from Code.org) . . Lesson 1 to 5 . Vocab Definition . assignment | using the assignment operator ( = ) to initialize or change the value stored in a variable | . data type | the format of the data that can be stored in a variable | . declaration | giving a name and data type to a variable | . initialization | giving a starting value to a variable using the assignment operator ( = ) | . literal | a source code representation of a value, such as a number or text | . primitive type | a basic data type that Java predefines | . reference type | a data type that contains a pointer to the memory location of an object | . variable | a container that stores a value in memory | . attribute | a characteristic of an object | . behavior | an action that an object can perform | . bug | an error in the code | . class | a programmer-defined blueprint from which objects are created | . constructor | a block of code that has the same name as the class and tells the computer how to create a new object | . debugging | finding and fixing problems in an algorithm or program | . instantiate | to call the constructor to create an object | . object | an instance of a class | . object-oriented programming | an approach to creating and using models of physical or imagined objects | . package | a collection of similar classes | . state | the attributes of an object that are represented by its instance variables | . Procedural Abstraction | allows a programmer to use a method by knowing what the method does even if they do not know how the method was written | . void method | a method that performs an action but does not return a value | . argument | a value passed to a method or constructor when the method or constructor is called | . dot operator | used to call a method in a class | . method | a named set of instructions to perform a task | . parameter | a variable in the method or constructor signature that defines the type of value to receive when the method or constructor is called | . boolean | a primitive data type that can be either true or false | . if statement | a conditional statement that only executes when the condition is true | . condition | determines whether or not to execute a block of code | . conditional statement | a statement that only executes when a condition is true | . logic error | an error that occurs when the code runs but does not do what was expected | . return | to exit a method and go back to the point in the program that called it with the requested value or information | . Lesson 6 . Vocab Definition . super keyword | a keyword used to refer to the superclass | . constructor signature | the first line of the constructor which includes the public keyword, the constructor name, and the values to specify when an object is created | . inheritance | an object-oriented programming principle where a subclass inherits the attributes and behaviors of a superclass | . subclass | a class that extends a superclass and inherits its attributes and behaviors | . superclass | a class that can be extended to create subclasses | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .   |   | .",
          "url": "https://lindaliu1202.github.io/lindaliu_blog/vocab/",
          "relUrl": "/vocab/",
          "date": ""
      }
      
  

  
  

  
  

  
  

  
      ,"page12": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lindaliu1202.github.io/lindaliu_blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}